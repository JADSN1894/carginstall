# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Add targets
  pre-install:
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential musl-tools
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-unknown-linux-musl
  
  # This workflow contains a single job called "build"
  install-with-target-x86_64-unknown-linux-musl:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: pre-install
    permissions:
      contents: write
    strategy:
     matrix:
        crate_name:
          - icx-asset
          - icx-cert
          #- icx-proxy
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install with target x86_64-unknown-linux-musl
        run: cargo install ${{matrix.crate_name}} --target x86_64-unknown-linux-musl
  
  # This workflow contains a single job called "build"
  install-with-target-x86_64-unknown-linux-gnu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: pre-install
    permissions:
      contents: write
    strategy:
     matrix:
        crate_name:
          - loco-cli

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install with target x86_64-unknown-linux-gnu
        run: cargo install ${{matrix.crate_name}} --target x86_64-unknown-linux-gnu
