name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Add targets
  # pre-install:
  #   runs-on: ubuntu-latest
    
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v4

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y build-essential musl-tools
  #         rustup target add x86_64-unknown-linux-gnu
  #         rustup target add x86_64-unknown-linux-musl
  
  # install-with-target-x86_64-unknown-linux-musl:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   strategy:
  #    matrix:
  #       crate_name:
  #         # - icx-asset
  #         - icx-cert
  #         # - icx-proxy
    
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: pre-install
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y build-essential musl-tools
  #         rustup target add x86_64-unknown-linux-musl
          
  #     - name: ${{matrix.crate_name}}
  #       run: cargo install ${{matrix.crate_name}} --target x86_64-unknown-linux-musl

  #     - name: Copy files
  #       run: |
  #         mkdir -p combined_artifacts
  #         cp -rfv ~/.cargo/bin/${{matrix.crate_name}} combined_artifacts/${{matrix.crate_name}}
  #         chmod +x combined_artifacts/${{matrix.crate_name}}
  #         strip --strip-all combined_artifacts/${{matrix.crate_name}}
          
  #     - name: Upload Combined Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: 'airtifacts'
  #         path: ./combined_artifacts/${{matrix.crate_name}}
  
  # install-with-target-x86_64-unknown-linux-gnu:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   strategy:
  #    matrix:
  #       crate_name:
  #         - loco-cli

  #   steps:
  #     - uses: actions/checkout@v4

  #     # Wait to close the issue: https://github.com/rust-lang/cargo/issues/12366
  #     - name: ${{matrix.crate_name}}
  #       run: cargo install ${{matrix.crate_name}} --target x86_64-unknown-linux-gnu
      
  #     - name: Determine Crate Name
  #       id: determine_crate_name
  #       run: |
  #         lowercase_crate_name=$(echo "${{ matrix.crate_name }}" | tr '[:upper:]' '[:lower:]')
  #         if [ "$lowercase_crate_name" == "loco-cli" ]; then
  #           echo "CRATE_NAME_ENV=loco" >> $GITHUB_ENV
  #         #elif [ "$lowercase_crate_name" == "sqlx" ]; then
  #         #  echo "CRATE_NAME_ENV=sqlx" >> $GITHUB_ENV
  #         else
  #           echo "CRATE_NAME_ENV=$lowercase_crate_name" >> $GITHUB_ENV
  #         fi
       
          
  #     - name: Copy files
  #       run: |
  #         mkdir -p combined_artifacts
  #         echo ${{ env.CRATE_NAME_ENV }}
  #         cp -rfv ~/.cargo/bin/${{ env.CRATE_NAME_ENV }} combined_artifacts/${{ env.CRATE_NAME_ENV }}
  #         chmod +x combined_artifacts/${{ env.CRATE_NAME_ENV }}
  #         strip --strip-all combined_artifacts/${{ env.CRATE_NAME_ENV }}
          
  #     - name: Upload Combined Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: 'airtifacts'
  #         path: ./combined_artifacts/${{ env.CRATE_NAME_ENV }}

  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version
        id: bump_version
        uses: mathieudutour/github-tag-action@v6
        with:
          version: 'bump'
          create_release: 'false'
          push_tags: 'true'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: Release ${{ steps.bump_version.outputs.new_tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
